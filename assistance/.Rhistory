width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
sample.dist
sample.dist[1]
abline(v=sample.dist[i],col='red')
abline(v=sample.dist[i],col='red')
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
# abline(v=sample.dist[i],col='red')
}
abline(v=sample.dist[i],col='red')
abline(v=0.44,col='red')
abline(v=0.44,col='red')
abline(v=55,col='red')
check.vote.sample <- function(population.dist,candidate.names=NULL,sample.dist,loop.number,sample.size){
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
}
check.vote.sample(c(34,35,23),candidate.names = c('Hillary','Trump',''),sample.dist = c(1,1),loop.number = 23)
layout(rbind(c(2,2)))
layout(rbind(c(1,2),c(3,4)))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
layout(rbind(c(1,2),c(3,4)))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
}
i=1
permutation.frequency <- table(vote.dist[,i])
permutation.frequency
barplot(permutation.frequency,main = col.names[i])
abline(v=sample.dist[i],col='red')
load("~/workspace/data_literacy/week5/week5.script.r")
i=1
#permutation.frequency <- table(vote.dist[,i])
#permutation.frequency
hist(permutation.frequency,main = col.names[i])
hist(vote.dist[,i],main = col.names[i])
i=1
#permutation.frequency <- table(vote.dist[,i])
#permutation.frequency
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
}
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
abline(v=population.dist[i],col='blue')
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Sanmu')
sample.dist = c(.33,.36,.45)
loop.number = 10000
sample.size = 100
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
abline(v=population.dist[i],col='blue')
}
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
text(sample.dist[i])
}
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
text(paste("pop.dist=",population.dist[i], 'sample.dis=' ,sample.dist[i]))
}
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
text(paste("pop.dist=",population.dist[i], 'sample.dis=' ,sample.dist[i]))
title = paste("pop.dist=",population.dist[i], 'sample.dis=' ,sample.dist[i])
title = paste("pop.dist=",population.dist[i], 'sample.dis=' ,sample.dist[i])
}
title = paste("pop.dist=",population.dist[i], 'sample.dis=' ,sample.dist[i])
title
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],main=title)
abline(v=sample.dist[i],col='red')
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],main=title)
abline(v=sample.dist[i],col='red')
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],main=title)
abline(v=sample.dist[i],col='red')
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],title=title)
abline(v=sample.dist[i],col='red')
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],title=title)
abline(v=sample.dist[i],col='red')
}
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],title='test')
abline(v=sample.dist[i],col='red')
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],title='test')
abline(v=sample.dist[i],col='red')
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
}
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
hist(vote.dist[,i],main = col.names[i])
abline(v=sample.dist[i],col='red')
}
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red')
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red')
}
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red')
}
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red')
}
sample.dist = c(.33,.36,.3)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red')
}
abline(v=sample.dist[i],col='red',xlim=c(0,1))
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red',xlim=c(0,1))
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red',xlim=c(0,1))
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title)
abline(v=sample.dist[i],col='red',xlim=c(0,1))
}
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title,xlim=c(0,1))
abline(v=sample.dist[i],col='red')
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Bernie')
sample.dist = c(.33,.36,.3)
loop.number = 10000
sample.size = 100
check.vote.sample(population.dist = population.dist ,candidate.names = candidate.names ,sample.dist = sample.dist, sample.size = 100 ,loop.number = loop.number)
check.vote.sample <- function(population.dist,candidate.names=NULL,sample.dist,loop.number,sample.size){
if (length(population.dist) != length(sample.dist)){
print("sample distribution size shoud be identical to the population candidate number")
return(-1)
}
candidate.number <- length(population.dist)
vote.dist <- matrix(ncol = candidate.number,nrow = loop.number)
x <- c(1:candidate.number)
if(!is.null(candidate.names)){
colnames(vote.dist) <- candidate.names
}
for(i in 1:loop.number){
g.sample <- sample(x=x,size=sample.size,replace = TRUE,prob=population.dist)
stat <- table(g.sample)
dist <- stat/sample.size
vote.dist[i,] <- dist
}
width <- sqrt(candidate.number)
width <- ceiling(width)
par(mfrow=c(width,width))
col.names <- colnames(vote.dist)
for(i in 1:ncol(vote.dist)){
title = paste("pop.dist =",population.dist[i], 'sample.dis =' ,sample.dist[i])
hist(vote.dist[,i],main = col.names[i],xlab = title,xlim=c(0,1))
abline(v=sample.dist[i],col='red')
}
}
population.dist = c(.34,.35,.23)
candidate.names = c('Hillary','Trump','Bernie')
sample.dist = c(.33,.36,.3)
loop.number = 10000
sample.size = 100
check.vote.sample(population.dist = population.dist ,candidate.names = candidate.names ,sample.dist = sample.dist, sample.size = 100 ,loop.number = loop.number)
Marriage_training <- read.csv("~/Dropbox/course/cs101/marriage/Marriage_training.csv")
View(Marriage_training)
train1.tree<-rpart(STATUS~GP+BP+GAGE+BAGE+AINCOME, data=Marriage_training,  control=rpart.control(maxdepth=1, # at most 1 split
cp=0, # any positive improvement will do
minsplit=1,
minbucket=1 # even leaves with 1 point are accepted
))
library('rpart')
train1.tree<-rpart(STATUS~GP+BP+GAGE+BAGE+AINCOME, data=Marriage_training,  control=rpart.control(maxdepth=1, # at most 1 split
cp=0, # any positive improvement will do
minsplit=1,
minbucket=1 # even leaves with 1 point are accepted
))
train1.tree
